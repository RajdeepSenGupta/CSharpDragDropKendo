@model List<Demo.Models.DemoClass>

@{
    <style>
        .bg-whitesmoke {
            background-color: whitesmoke;
        }
    </style>



    <script type="text/javascript">
        $(document).ready(function () {

            // Grid 1
            // Fetch the data source of the grid.
            var gridDataSource = new kendo.data.HierarchicalDataSource({
                type: "json",
                transport: {
                    read: "https://localhost:44304/Home/GetData?isTreeData=false"                           // The transport read method performs an http get request and fetches the data
                },
                pageSize: 5,
                schema: {                                                                                   // The schema model assigns the data id to each row
                    model: {
                        id: "id"
                    }
                }
            });

            var grid = $('#grid').kendoGrid({                                                               // Creates the grid on the selected html element with the defined properties
                dataSource: gridDataSource,
                height: 450,
                groupable: false,
                selectable: "row",
                sortable: true,
                pageable: {                                                                                 // Set this for showing the default pagination of the grid
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                columns: [                                                                                 // Defines the column of the grid. 'field' defines the property name. 'title' defines the header of the column
                    {
                        field: "name",
                        title: "Name"
                    }, {
                        field: "details",
                        title: "Details"
                    }]
            }).data("kendoGrid");

            $(grid.element).kendoDraggable({                                                               // Enables the 'tr' elements to be draggable
                filter: 'tr',
                hint: function (e) {
                    return e.clone().css({
                        "opacity": 0.6,
                        "background-color": "#0cf"
                    });
                }
            });

            // Tree
            var treeDataSource = new kendo.data.HierarchicalDataSource({                                    // The transport read method performs an http get request and fetches the data
                transport: {
                    read: {
                        url: "https://localhost:44304/Home/GetData?isTreeData=true",
                        dataType: "json"
                    }
                },
                schema: {
                    model: {
                        id: "id",
                        hasChildren: "hasChildren"
                    }
                }
            });

            var tree = $("#treelist").kendoTreeView({                                                       // Creates the tree view on the selected html element with the defined properties
                dataSource: treeDataSource,
                dataTextField: "name",
                dragAndDrop: true
            }).data("kendoTreeView");

            $(tree.element).kendoDropTargetArea({                                                           // Sets a particular target area to be droppable, when a drag method is in process
                filter: 'li',
                drop: function (e) {
                    debugger
                    var draggableElement = e.draggable.currentTarget,
                        source = gridDataSource.getByUid(draggableElement.data("uid"));

                    if (source === null || source === undefined) {
                        source = gridDataSource2.getByUid(draggableElement.data("uid"));
                        if (source === null || source === undefined) {
                            source = gridDataSource3.getByUid(draggableElement.data("uid"));
                        }
                    }

                    var droppableElement = e.dropTarget,
                        destination = treeDataSource.getByUid(droppableElement.data("uid"));

                    $.ajax({
                        type: "POST",
                        url: "https://localhost:44304/api/update",
                        data: {
                            sourceId: source.id, destinationId: destination.id
                        },
                        success: function () {
                            var tree = $("#treelist").data("kendoTreeView");
                            tree.dataSource.read();
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            alert(xhr.responseText);
                        }
                    });
                }
            });

            $('#deleteNode').on('click', function () {                                                      // Deletes particular element
                let selectedDataItem = tree.dataItem(tree.select());                                        // Helps to get the selected item of a tree. When clicked, kendo retains the 'selected' status which helps to get the selected element. (continue..)
                                                                                                            // To make an element selectable, 'selectable' property of a kendo element is used. (Please check line #34)
                $.ajax({
                    type: "DELETE",
                    url: "https://localhost:44304/api/delete?id=" + selectedDataItem.id,
                    success: function () {
                        var tree = $("#treelist").data("kendoTreeView");
                        tree.dataSource.read();

                        var grid = $('#grid').data('kendoGrid');
                        grid.dataSource.read();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        alert(xhr.responseText);
                    }
                });
            });

            // Grid 2
            var gridDataSource2 = new kendo.data.HierarchicalDataSource({
                type: "json",
                transport: {
                    read: "https://localhost:44304/Home/GetData?isTreeData=false"
                },
                pageSize: 5,
                schema: {
                    model: {
                        id: "id"
                    }
                }
            });

            var grid2 = $('#grid2').kendoGrid({
                dataSource: gridDataSource2,
                height: 450,
                groupable: false,
                selectable: "row",
                sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                columns: [
                    {
                        field: "name",
                        title: "Name"
                    }, {
                        field: "details",
                        title: "Details"
                    }]
            }).data("kendoGrid");

            $(grid2.element).kendoDraggable({
                filter: 'tr',
                hint: function (e) {
                    return e.clone().css({
                        "opacity": 0.6,
                        "background-color": "#0cf"
                    });
                }
            });

            // Grid 3
            var gridDataSource3 = new kendo.data.HierarchicalDataSource({
                type: "json",
                transport: {
                    read: "https://localhost:44304/Home/GetData?isTreeData=false"
                },
                pageSize: 5,
                schema: {
                    model: {
                        id: "id"
                    }
                }
            });

            var grid3 = $('#grid3').kendoGrid({
                dataSource: gridDataSource3,
                height: 450,
                groupable: false,
                selectable: "row",
                sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                columns: [
                    {
                        field: "name",
                        title: "Name"
                    }, {
                        field: "details",
                        title: "Details"
                    }]
            }).data("kendoGrid");

            $(grid3.element).kendoDraggable({
                filter: 'tr',
                hint: function (e) {
                    return e.clone().css({
                        "opacity": 0.6,
                        "background-color": "#0cf"
                    });
                }
            });
        });
    </script>

    <div class="row border">
        <div class="col-12 col-md-4 col-lg-3 p-0 bg-whitesmoke border-right">
            <div class="card-header d-flex align-items-center">
                <h6 class="flex-grow-1">Tree View:</h6>
                <input class="btn btn-primary" type="button" value="Delete" id="deleteNode" />
            </div>
            <div class="p-2">
                <div id="treelist" class="grid"></div>
            </div>
        </div>
        <div class="col-12 col-md-8 col-lg-9 px-0">
            <h6 class="card-header">Grid View 1:</h6>
            <div id="grid" class="sidePanel"></div>
            <div class="row m-0">
                <div class="col-6">
                    <h6 class="card-header">Grid View 2:</h6>
                    <div id="grid2" class="sidePanel"></div>
                </div>
                <div class="col-6">
                    <h6 class="card-header">Grid View 3:</h6>
                    <div id="grid3" class="sidePanel"></div>
                </div>
            </div>
        </div>
    </div>
}